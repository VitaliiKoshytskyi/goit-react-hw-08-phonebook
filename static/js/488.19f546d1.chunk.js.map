{"version":3,"file":"static/js/488.19f546d1.chunk.js","mappings":"6OACA,GAAiB,E,SCuEjB,EAlEqB,WACnB,OAA0BA,EAAAA,EAAAA,UAAS,CAAEC,KAAM,GAAIC,MAAO,GAAIC,SAAU,KAApE,eAAOC,EAAP,KAAcC,EAAd,KACQJ,EAA0BG,EAA1BH,KAAMC,EAAoBE,EAApBF,MAAOC,EAAaC,EAAbD,SACfG,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAAC,GACnB,IAAMR,EAAOQ,EAAMC,OAAOT,KACpBU,EAAQF,EAAMC,OAAOC,MAC3BN,GAAS,SAAAO,GACP,OAAO,kBAAKA,GAAZ,cAAwBX,EAAOU,GAChC,GACF,EASD,OACE,kBAAME,SARa,SAAAJ,GACnBA,EAAMK,iBACN,IAAMC,GAAW,UAAQX,GACzBE,GAASU,EAAAA,EAAAA,IAASD,IAClBV,EAAS,CAAEJ,KAAM,GAAIC,MAAO,GAAIC,SAAU,IAC3C,EAG+Bc,UAAWC,EAAAA,KAAzC,WACE,iBAAKD,UAAWC,EAAAA,QAAhB,WACE,sCACA,kBACEC,SAAUX,EACVS,UAAWC,EAAAA,SACXP,MAAOV,EACPmB,KAAK,OACLnB,KAAK,OACLoB,YAAY,YACZC,MAAM,yIACNC,UAAQ,QAGZ,iBAAKN,UAAWC,EAAAA,QAAhB,WACE,uCACA,kBACEC,SAAUX,EACVS,UAAWC,EAAAA,SACXP,MAAOT,EACPkB,KAAK,QACLnB,KAAK,QACLoB,YAAY,aACZC,MAAM,+FACNC,UAAQ,QAGZ,iBAAKN,UAAWC,EAAAA,QAAhB,WACE,0CACA,kBACEC,SAAUX,EACVS,UAAWC,EAAAA,SACXP,MAAOR,EACPiB,KAAK,WACLnB,KAAK,WACLoB,YAAY,gBACZC,MAAM,+FACNC,UAAQ,QAGZ,mBAAQH,KAAK,SAAb,wBAGL,EC3DD,EATqB,WACnB,OACE,4BACE,2CACA,SAAC,EAAD,MAGL,C","sources":["components/RegisterForm/RegisterForm.module.css","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/auth-operations';\n\nimport css from './RegisterForm.module.css';\n\nconst RegisterForm = () => {\n  const [state, setState] = useState({ name: '', email: '', password: '' });\n  const { name, email, password } = state;\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n    setState(prevState => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const initialData = { ...state };\n    dispatch(register(initialData));\n    setState({ name: '', email: '', password: '' });\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={css.form}>\n      <div className={css.formBox}>\n        <label>Name:</label>\n        <input\n          onChange={handleChange}\n          className={css.formText}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"User Name\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </div>\n      <div className={css.formBox}>\n        <label>Email:</label>\n        <input\n          onChange={handleChange}\n          className={css.formText}\n          value={email}\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"User Email\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </div>\n      <div className={css.formBox}>\n        <label>Password:</label>\n        <input\n          onChange={handleChange}\n          className={css.formText}\n          value={password}\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"User Password\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </div>\n      <button type=\"submit\">Register</button>\n    </form>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from 'components/RegisterForm/RegisterForm';\n\nconst RegisterPage = () => {\n  return (\n    <div>\n      <h1>Register Page</h1>\n      <RegisterForm />\n    </div>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["useState","name","email","password","state","setState","dispatch","useDispatch","handleChange","event","target","value","prevState","onSubmit","preventDefault","initialData","register","className","css","onChange","type","placeholder","title","required"],"sourceRoot":""}